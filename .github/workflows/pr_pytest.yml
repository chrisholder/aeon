name: PR pytest

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths:
      - "aeon/**"
      - ".github/workflows/**"
      - "pyproject.toml"

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  pytest:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ macOS-12 ]
#        python-version: [ "3.8", "3.9", "3.10", "3.11" ]
        python-version: [ "3.8" ]
        cpu-features: [ '+64bit', '+adx', '+aes', '+avx', '+avx2', '-avx512bf16', '-avx512bitalg', '-avx512bw', '-avx512cd', '-avx512dq', '-avx512er', '-avx512f', '-avx512ifma', '-avx512pf', '-avx512vbmi', '-avx512vbmi2', '-avx512vl', '-avx512vnni', '-avx512vpopcntdq', '+bmi', '+bmi2', '-cldemote', '-clflushopt', '-clwb', '-clzero', '+cmov', '+cx16', '+cx8', '-enqcmd', '+f16c', '+fma', '-fma4', '+fsgsbase', '+fxsr', '-gfni', '+invpcid', '-lwp', '+lzcnt', '+mmx', '+movbe', '-movdir64b', '-movdiri', '-mwaitx', '+pclmul', '-pconfig', '-pku', '+popcnt', '-prefetchwt1', '+prfchw', '-ptwrite', '-rdpid', '+rdrnd', '+rdseed', '+rtm', '+sahf', '-sgx', '-sha', '-shstk', '+sse', '+sse2', '+sse3', '+sse4.1', '+sse4.2', '-sse4a', '+ssse3', '-tbm', '-vaes', '-vpclmulqdq', '-waitpkg', '-wbnoinvd', '-xop', '+xsave', '-xsavec', '+xsaveopt', '-xsaves']

    env:
      NUMBA_CACHE_DIR: ${{ github.workspace }}/.numba_cache
      NUMBA_CPU_NAME: generic
#      NUMBA_CPU_FEATURES: +64bit
      CICD_RUNNING: 1

    steps:
      - name: Checkout main
        uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set CPU Features
        run: echo "NUMBA_CPU_FEATURES=${{ join(matrix.cpu-features, ' ') }}" >> $GITHUB_ENV
        shell: bash

      # On Windows, GNU tar is much faster than the default BSD tar
      - name: "Use GNU tar instead BSD tar"
        if: ${{ runner.os == 'Windows' }}
        shell: cmd
        run: echo C:\Program Files\Git\usr\bin>>"%GITHUB_PATH%"

      - name: Restore Python Cache
        uses: actions/cache@v3
        id: cache
        with:
          path: .numba_cache
          key: ${{ runner.os }}-numba-${{ matrix.python-version }}-${{ matrix.cpu-features }}-${{ hashFiles('pyproject.toml') }}-4

      - name: Install aeon and dependencies
        run: python -m pip install .[all_extras,dev]

      - name: Show dependencies
        run: python -m pip list

      - name: Run tests
        # run the full test suit if a PR has the 'full pytest actions' label
#        run: python -m pytest -k 'not TestAll' --ignore=aeon/utils/tests/test_mlflow_aeon_model_export.py --prtesting ${{ github.event_name != 'pull_request' || !contains(github.event.pull_request.labels.*.name, 'full pytest actions') }}
        run: python -m pytest aeon/distances/tests/