name: Aeon workflow env setup
description: "Sets up the env variables for aeon actions"

inputs:
  cache_name:
    description: "The name of the cache"
    required: false
    default: ""
  runner_os:
    description: "The runner os"
    required: true
  python_version:
    description: "The python version"
    required: true
  invalidate_numba_cache:
    description: "Invalidate the numba cache"
    required: false
    default: "false"
  invalidate_pip_cache:
    description: "Invalidate the pip cache"
    required: false
    default: "false"

runs:
  using: "composite"
  steps:
    # ============================= Numba Cache =============================
    - name: Set numba environment variables
      run: |
        echo "NUMBA_CPU_NAME=generic" >> $GITHUB_ENV
        echo "NUMBA_CACHE_DIR=${{ github.workspace }}/.numba_cache" >> $GITHUB_ENV
        echo "NUMBA_CPU_FEATURES=+64bit +adx +aes +avx +avx2 -avx512bf16 -avx512bitalg -avx512bw -avx512cd -avx512dq -avx512er -avx512f -avx512ifma -avx512pf -avx512vbmi -avx512vbmi2 -avx512vl -avx512vnni -avx512vpopcntdq +bmi +bmi2 -cldemote -clflushopt -clwb -clzero +cmov +cx16 +cx8 -enqcmd +f16c +fma -fma4 +fsgsbase +fxsr -gfni +invpcid -lwp +lzcnt +mmx +movbe -movdir64b -movdiri -mwaitx +pclmul -pconfig -pku +popcnt -prefetchwt1 +prfchw -ptwrite -rdpid +rdrnd +rdseed +rtm +sahf -sgx -sha -shstk +sse +sse2 +sse3 +sse4.1 +sse4.2 -sse4a +ssse3 -tbm -vaes -vpclmulqdq -waitpkg -wbnoinvd -xop +xsave -xsavec +xsaveopt -xsaves" >> $GITHUB_ENV
        echo "NUMBA_CACHE_DIR=${{ github.workspace }}/.numba_cache" >> $GITHUB_ENV
        echo "CICD_RUNNING=1" >> $GITHUB_ENV
        echo "NUMBA_CACHE_NAME=${{ inputs.runner_os }}-${{ inputs.python_version }}-numba-${{ inputs.cache_name }}" >> $GITHUB_ENV
      shell: bash

    # Check tags to see if we should invalidate the cache
    - name: Check tags to see if we should invalidate the cache
      if: contains( github.event.pull_request.labels.*.name, 'invalidate_numba_cache') || contains( github.event.pull_request.labels.*.name, 'invalidate_cache') || ${{ inputs.invalidate_numba_cache == 'true' }}
      run: echo "INVALIDATE_NUMBA_CACHE=1" >> $GITHUB_ENV
      shell: bash
    # ============================= Numba Cache =============================

    # ============================== Pip Cache ==============================
      # For some reason on windows I/O on the C drive is really slow. To get around this
      # we set the python, and the cache directories to the D drive which doesn't
      # have slow I/O.
      # See: https://github.com/actions/runner-images/issues/8755 for more details
    - if: ${{ inputs.runner_os == 'Windows' }}
      name: Set Python environment for windows
      shell: bash
      run: |
        echo "PYTHONUSERBASE=D:\python\userbase" >> $GITHUB_ENV
        echo "PIP_CACHE_DIR=D:\pip\cache" >> $GITHUB_ENV
        echo "PYTHONPYCACHEPREFIX=D:\pycache" >> $GITHUB_ENV
    - if: ${{ inputs.runner_os == 'Linux' }}
      name: Set Python environment for linux
      run: echo "PIP_CACHE_DIR=~/.cache/pip" >> $GITHUB_ENV
      shell: bash
    - if: ${{ inputs.runner_os == 'macOS' }}
      name: Set Python environment for macos
      run: echo "PIP_CACHE_DIR=~/Library/Caches/pip" >> $GITHUB_ENV
      shell: bash

    - name: Shared environment variables
      run: echo "PIP_CACHE_NAME=${{ inputs.runner_os }}-${{ inputs.python_version }}-pip-${{ input.cache_name }}" >> $GITHUB_ENV
      shell: bash

    # Check tags to see if we should invalidate the cache
    - name: Check tags to see if we should invalidate the cache
      if: contains( github.event.pull_request.labels.*.name, 'invalidate_pip_cache') || contains( github.event.pull_request.labels.*.name, 'invalidate_cache') || ${{ inputs.invalidate_pip_cache == 'true' }}
      run: echo "INVALIDATE_PIP_CACHE=1" >> $GITHUB_ENV
      shell: bash
    # ============================== Pip Cache ==============================
